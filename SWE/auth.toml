[auth]
	# This is for the links a the bottom of login/join auth pages.
	or = "or"
	join_link = "Registrera dig!"
	login_link = "Logga In"
	forgot_link = "Glömt användarnamn eller lösenord"

# /login
[auth.login]
	page_title = "Logga in på Game Jolt"

	twitter_button = "Logga In Med Twitter"
	facebook_button = "Logga In Med Facebook"

	username_label = "Användernamn"
	password_label = "Lössenord"
	submit_button = "Logga In"

	# Shows up if you enter an invalid user/password combination.
	invalid_login_error_html = "Felaktigt användarnamn eller lösenord."

	# Login takes a while, so we show this for the loading text.
	# Can be quirky and fun! =]
	loading_message_count = "4"
	loading_message_1 = "Anslutning till stordator..."
	loading_message_2 = "Beräkning exakta värdet av π..."
	loading_message_3 = "Distribuera nöjes moduler..."
	loading_message_4 = "Projecterar hoopla matrix..."

# /join
[auth.join]
	page_title = "Gå med i Game Jolt - Den största samlingen av Indie Games av Människor"

	twitter_button = "Registerar Dig Med Twitter"
	facebook_button = "Registerar Dig Med Facebook"

	# The lead text of the page.
	# Quirky and fun as it's the text to get them excited about signing up.
	# Let's try to keep it at 3 lines or less on the page.
	join_message_html_count = "2"
	join_message_html_1 = "Gå med oss. Mwuahaha.<br>Vi har spel.<br><strong><em>Mwuahahaha!</em></strong>"
	join_message_html_2 = "Följ med på en raket fartyg rida in i hjärtat av supernova gjord av spel."

	email_label = "E-postadress"
	username_label = "användarnamn"
	password_label = "lössenord"

	submit_button = "Registrera dig"

# /join/almost
# After a successful sign up they land here.
# They still have to authorize their account.
[auth.join.almost]
	page_title = "Nästa där!"
	heading = "@:auth.join.almost.page_title"
	body_html = """
	<p>Innan du kan logga in på Game Jolt, måste du bekräfta den e-postadress på ditt konto.</p>
	<p>Vi har skickat ett e-postmeddelande med instruktioner om hur du godkänna ditt konto.</p>
	"""
	spam = "Om du inte ser ett e-postmeddelande inom 10 minuter, vänligen kontrollera din skräppostmapp. Det kan ha ätit upp det."
	urgency = "Observera att du har en vecka att godkänna ditt konto. Efter det kommer det att tas bort och du måste registrera dig igen."

# You need to actually sign up to get a valid URL for this page.
# We only show a Growl on successful authorization and funnel off to the main site.
[auth.authorize]
	success_growl_title = "Konto Auktoriserad"
	success_growl = "Vi omdirigerar dig till din Gamejolt instrumentpanelen nu."

# /authorize/169219/62b17036174c87ee503fe0ef2902c79d/2
# The page that shows when their authorization fails.
# They shouldn't get here unless they clicked the link again after authorizing. Or if they are trying to cheat something.
[auth.authorize.invalid]
	page_title = "Ogiltig behörighetskod"
	heading = "Ogiltigt Tillstånd"
	body_html = """
	<p>Din auktoriseringskoden är ogiltig.</p>
	<p>Var noga med att kopiera och klistra in hela webbadressen som vi mailade dig.</p>
	"""

# /forgot
[auth.forgot]
	page_title = "Hämta Inloggningsuppgifter"
	heading = "@:auth.forgot.page_title"

	email_help = "Ange e-postadressen på ditt konto och vi kommer att skicka dina inloggningsuppgifter till dig."
	email_label = "E-postadress"
	submit_button = "Hämta autentiseringsuppgifter"

	# If the email address they enter isn't a registered user, this shows up as an error message.
	invalid_email_error_html = """
	<p>Hmm, denna e-postadressen är inte i vårat system. Du kanske in har <a href="/join">registrerat dig ännu</a>?</p>
	"""

# /forgot/sent
# For after they fill out the "forgot" form.
[auth.forgot.sent]
	page_title = "Referenser Skickade"
	heading = "@:auth.forgot.sent.page_title"
	body_html = "<p>Vi har skickat dina inloggningsuppgifter till den e-postadress du angett.</p>"
	spam = "Om du inte ser vår e-post inom 10 minuter, vänligen kontrollera din skräppostmapp. Det kan ha varit ätit upp!"

# The URL for this gets sent in an email when they fill out the forgot login credentials page.
[auth.reset_password]
	page_title = "Återställ lösenord"
	heading = "@:auth.reset_password.page_title"

	password_help = "Om du vill återställa ditt lösenord, skriv in ett nytt nedan."
	password_label = "Nytt lösenord"
	submit_button = "Återställ lösenord"

	# For when they successfully reset.
	# Will send them back to the login page after showing this Growl.
	success_growl_title = "Lösenord ändrat"
	success_growl = "Ditt lösenord har återställts. Nu kan du logga in med ditt nya."


#####################
# Linked Account Auth

[auth.linked_account]

	# When they get returned back to GJ from FB/Twitter, etc. we do some processing of the login/sign up.
	# This is a generic loading message while we're doing our work.
	loading_message = "Bearbetar. Vänta..."

[auth.linked_account.facebook]

	# Generic failed message.
	failed_growl = "Det går inte att logga in med Facebook."
	failed_growl_title = "Inloggningen misslyckades"

	# For the rare case when FB doesn't give us an email address. This would be very rare if it did ever happen.
	no_email_growl = "Ditt Facebook-konto returnerade inte en e-postadress. Se till att du har kontrollerat det med Facebook."
	no_email_growl_title = "Å nej!"

	# When someone tries to sign up with an FB account with an email address that exists on an existing GJ account.
	# In most cases this will probably be an accident where they signed up in the past
	# and then try signing up again with FB later on, but their email address is
	# registered on their old account.
	duplicate_email_growl = "Den e-postadress på denna Facebook-konto används redan. Kanske du redan har ett konto?"
	duplicate_email_growl_title = "Å nej!"

	# After a successful FB sign up.
	created_growl = "Ditt konto har skapats. Det är smidig segling från och med nu!"
	created_growl_title = "Kontot Skapad"

[auth.linked_account.twitter]

	# Generic failed message.
	failed_growl = "Det går inte att logga in med Twitter."
	failed_growl_title = "Inloggningen misslyckades"

	# When they submit the form and their account is set up with Twitter.
	created_growl = "Ditt konto har skapats. Det är smidig segling från och med nu!"
	created_growl_title = "ontot Skapad"

# /login/finalize-twitter
# They get directed here when they sign up with a new twitter account and we require their email address.
[auth.linked_account.twitter.finalize]
	page_title = "Email Krävs"
	heading = "@:auth.linked_account.twitter.finalize.page_title"

	email_help = "För att avsluta med att logga in med Twitter, ange en giltig e-postadress."
	email_label = "E-postadress"
	submit_button = "Registrera dig!"

	# If they entered an email address that exists on another account.
	# In most cases this will probably be an accident where they signed up in the past
	# and then try signing up again with twitter later on, but their email address is
	# registered on their old account.
	duplicate_email_error_html = """
	<p>Den e-postadress du angav är redan i bruk.</p>
	<p>Om du redan har ett Gamejolt konto så kan du <a href="/login">logga in här</a>.</p>
	<p>Om du har glömt dina inloggningsuppgifter, så kan du <a href="/forgot">hämta de här</a>.</p>
	"""

